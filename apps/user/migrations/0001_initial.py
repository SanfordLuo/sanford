# Generated by Django 3.0 on 2021-09-07 17:51

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.BigIntegerField(unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=11, unique=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('id_card', models.CharField(blank=True, max_length=255, null=True)),
                ('province', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('email_status', models.IntegerField(default=0)),
                ('real_status', models.IntegerField(default=0)),
                ('register_timestamp', models.BigIntegerField(blank=True, null=True)),
                ('real_timestamp', models.BigIntegerField(blank=True, null=True)),
                ('last_login_timestamp', models.BigIntegerField(blank=True, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
